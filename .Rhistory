for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#make initial plot
jpeg(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.jpeg"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
for(cell_type in unique(Idents(sobj))){
#make output file name
outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".jpeg")
make_celltrek_plots(sobj,cell_type,outfile)
}
}
#function for maing celltrek plots
make_celltrek_plots = function(sobj,CT,outfile){
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT))
#change names to cell type you want to highligh
names(highlight) = CT
#make file
pdf(outfile)
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "grey")))
dev.off()
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#make initial plot
jpeg(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
for(cell_type in unique(Idents(sobj))){
#make output file name
outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
make_celltrek_plots(sobj,cell_type,outfile)
}
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#make initial plot
jpeg(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
# #iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
}
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
# #iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
}
table(Idents(sobj))
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
# #iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(j in c(1:nct)){
ct1 = unique(Idents(sobj))[j]
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(j!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
#function for maing celltrek plots
make_celltrek_plots = function(sobj,CT,outfile){
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT))
#change names to cell type you want to highligh
names(highlight) = CT
#make file
pdf(outfile)
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "grey")))
dev.off()
}
#function for maing celltrek plots
make_celltrek_colloc_plots = function(sobj,CT1,CT2,outfile){
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT),WhichCells(sobj, idents = CT2) )
#change names to cell type you want to highligh
names(highlight) = c(CT1,CT2)
#make file
pdf(outfile)
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "blue")))
dev.off()
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(j in c(1:nct)){
ct1 = unique(Idents(sobj))[j]
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(j!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
#function for maing celltrek plots
make_celltrek_colloc_plots = function(sobj,CT1,CT2,outfile){
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT1),WhichCells(sobj, idents = CT2) )
#change names to cell type you want to highligh
names(highlight) = c(CT1,CT2)
#make file
pdf(outfile)
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "blue")))
dev.off()
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(j in c(1:nct)){
ct1 = unique(Idents(sobj))[j]
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(j!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
#function for maing celltrek plots
make_celltrek_colloc_plots = function(sobj,CT1,CT2,outfile){
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT1),WhichCells(sobj, idents = CT2) )
#change names to cell type you want to highligh
names(highlight) = c(CT1,CT2)
#make file
pdf(outfile)
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "blue","grey")))
dev.off()
}
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(j in c(1:nct)){
ct1 = unique(Idents(sobj))[j]
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(j!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(i in c(1:nct)){
ct1 = unique(Idents(sobj))[i]
dir.create(file.path(paste0(ST_dir[i], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(i!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
ct1
#iterate over each sample
nsamp = length(ST_path)
for(j in c(1:nsamp)){
#make output director
dir.create(file.path(ST_dir[j], "celltrek"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"deconv_plots"), showWarnings = FALSE)
dir.create(file.path(paste0(ST_dir[j], "\\celltrek"),"colloc_plots"), showWarnings = FALSE)
#read in object
sobj = readRDS(ST_path[j])
sobj@meta.data$Idents = gsub("\\/", "_", sobj@meta.data$Idents)
#change identities
Idents(sobj) = sobj@meta.data$Idents
#write csv for cell type frequency
write.csv(table(Idents(sobj)),paste0(ST_dir[j],"\\celltrek\\deconv_plots\\celltype_freq.csv"))
#make initial plot
pdf(paste0(ST_dir[j],"\\celltrek\\deconv_plots\\full_celltrek.pdf"))
print(SpatialDimPlot(sobj))
dev.off()
#iterate over each cell type
# for(cell_type in unique(Idents(sobj))){
#   #make output file name
#   outfile = paste0(ST_dir[j],"\\celltrek\\deconv_plots\\",cell_type,".pdf")
#   make_celltrek_plots(sobj,cell_type,outfile)
# }
#iterate over each cell type
nct = length(unique(Idents(sobj)))
for(i in c(1:nct)){
ct1 = unique(Idents(sobj))[i]
dir.create(file.path(paste0(ST_dir[j], "\\celltrek\\colloc_plots"),ct1), showWarnings = FALSE)
for(k in c(1:nct)){
if(i!=k){
ct2 = unique(Idents(sobj))[k]
outfile = paste0(ST_dir[j],"\\celltrek\\colloc_plots\\",ct1,"\\",ct1,"_",ct2,".pdf")
make_celltrek_colloc_plots(sobj,ct1,ct2,outfile)
}
}
}
}
?SpatialDimPlot
CT = "C_TAL"
#cells to highlight
highlight <- list(WhichCells(sobj, idents = CT))
#change names to cell type you want to highligh
names(highlight) = CT
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "none")))
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "none")))
print(SpatialDimPlot(sobj,cells.highlight=  highlight,cols.highlight = c("red", "blue")))
isobj <- Subset(sobj, subset = WhichCells(sobj, idents = CT))
print(SpatialDimPlot(isobj))
isobj <- subset(sobj, subset = WhichCells(sobj, idents = CT))
print(SpatialDimPlot(isobj))
WhichCells(sobj, idents = CT)
isobj <- subset(sobj, idents = "C_TAL")
print(SpatialDimPlot(isobj))
isobj <- subset(sobj, idents = "C_TAL")
print(SpatialDimPlot(isobj))
SpatialDimPlot(isobj)
SpatialDimPlot(sobj)
#install niche-DE
devtools::install_github("Kmason23/NicheDE") # install
library(nicheDE)
library(Matrix)
library(Seurat)
library(ggplot2)
library(abind)
library(enrichR)
sample = 'ST-liver1'
setwd(paste0("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\CancerDiscovery_mCRC_Visium_scRNA\\ST\\",sample))
#make object (Note the large size is due to teh counts matrix. We are trying to run niche-DE with sparse matrices)
Merged_NDE = readRDS('merged_NDE_22261_new.rds')
#Pathway enrichment analysis for macrophages and tumor
#get fibroblast tumor niche genes
macro_tum_pos = get_niche_DE_genes(Merged_NDE,'interaction',index='myeloid',niche = 'tumor_epithelial',direction = "positive",alpha = 0.05)
#view gene table
View(macro_tum_pos)
#perform pathway enrichment analysis
macro_tum_processes = enrichr(macro_tum_pos[,1],databases = 'Reactome_2016')
View(macro_tum_processes$Reactome_2016)
#Figure 5 LR analysis for macrophages and tumor
#get ligand-receptor downstream target scores
data("niche_net_ligand_target_matrix")
#get ligand receptor pair list
data("ramilowski_ligand_receptor_list")
#run niche-LR
macro_tumor_LR = niche_LR_spot(Merged_NDE,'tumor_epithelial','myeloid',niche_net_ligand_target_matrix,
ramilowski_ligand_receptor_list,25,50,0.05,truncation_value = 5)
#view ligand-receptors
View(macro_tumor_LR)
#Figure 5 TAM markers and normal macrophage markers
#get TAM markers
tum_marker = niche_DE_markers(Merged_NDE,'myeloid','tumor_epithelial','hepatocytes+cholangiocytes',0.05)
#view tumor markers
View(tum_marker)
#get normal macrophage markers
norm_marker = niche_DE_markers(Merged_NDE,'myeloid','hepatocytes+cholangiocytes','tumor_epithelial',0.05)
#view nomral macrophage markers
View(tum_marker)
#Figure 5 pathway analysis of TAM markers
TAM_processes = enrichr(tum_marker[,1],databases = 'Reactome_2016')
#View processes
View(TAM_processes$Reactome_2016)
# Figure 5: Umap module score for TAM marker genes
#Read in data
setwd(paste0("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\CancerDiscovery_mCRC_Visium_scRNA"))
#read in scrna-seq from liver atlas
sobj = readRDS('scrna_seq_macro_fine.rds')
#read into saver results
saver_expression = readRDS('saver.rds')
#add slot for saver values
sobj[["Saver"]] <- Seurat::CreateAssayObject(counts = saver_expression$estimate)
#make default assay saver
Seurat::DefaultAssay(sobj) <- "Saver"
#get kupffer and TAM markers
kup_markers = norm_marker[,1]
tum_markers = tum_marker[,1]
#typical seurat pipeline
#find variable genes
sobj = FindVariableFeatures(sobj, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(sobj)
#scale data
sobj <- ScaleData(sobj, features = all.genes,do.scale = F, do.center = F)
#run pca
sobj = RunPCA(sobj)
#clustering
sobj <- FindNeighbors(sobj, dims = 1:50)
#sobj <- FindClusters(sobj, resolution = 0.5)
sobj <- RunUMAP(sobj, dims = 1:50)
#dimplot
DimPlot(sobj, reduction = "umap")
#add module score for kupffer markers
sobj <- AddModuleScore(sobj,
features = list(kup_markers),
name="kup_markers")
#add module score for TAM markers
sobj <- AddModuleScore(sobj,
features = list(tum_markers),
name="tum_markers")
#feature plot of kupffer markers
gene = 'kup_markers1'
FeaturePlot(sobj,features = gene,cols = c("white", "blue"))+theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),
axis.ticks.y = element_blank(),axis.text.y = element_blank())+
xlab('')+ylab('')+ggtitle('')
#feature plot of TAM markers
gene = 'tum_markers1'
FeaturePlot(sobj,features = gene,cols = c("white", "blue"))+theme(axis.ticks.x = element_blank(),axis.text.x = element_blank(),
axis.ticks.y = element_blank(),axis.text.y = element_blank())+
xlab('')+ylab('')+ggtitle('')
#dimplot of scrnaseq data
DimPlot(sobj)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\NicheDE_github")
devtools::document()
macro_tumor_LR = niche_LR_spot(Merged_NDE,'tumor_epithelial','myeloid',niche_net_ligand_target_matrix,
ramilowski_ligand_receptor_list,25,50,0.05,truncation_value = 5)
#view ligand-receptors
