pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site(url = 'kmason23-nicheDE.com')
pkgdown::build_site(destination = 'kmason23-nicheDE.com')
pkgdown::build_site(override = list(url = 'kmason23-nicheDE.com'))
pkgdown::build_site(override = list(reference))
pkgdown::build_site()
render_page()
pkgdown::render_page()
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
pkgdown::build_site()
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE")
devtools::document()
pkgdown::build_site()
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE")
devtools::document()
pkgdown::build_site(override = list(url = 'https://kmason23-nicheDE.com'))
pkgdown::build_tutorials()
pkgdown::preview_page()
pkgdown::preview_site()
pkgdown::build_tutorials(pkg = "C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE")
pkgdown::build_tutorials(pkg = "C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE",preview = T)
pkgdown::build_articles(pkg = "C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE",preview = T)
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
usethis::use_pkgdown_github_pages()
?use_git
usethis::use_pkgdown_github_pages()
pkgdown::preview_page()
pkgdown::preview_site()
pkgdown::preview_site()
pkgdown::preview_site(preview = TRUE)
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
pkgdown::build_site("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
pkgdown::build_site("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
usethis::use_pkgdown_github_pages()
pkgdown::build_site_github_pages("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
pkgdown::build_site_github_pages("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
pkgdown::build_site_github_pages("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github",preview =TRUE)
preview_site("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github",preview = T)
pkgdown::preview_site("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github",preview = T)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_vignette("Tutorial")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(ggplot2)
#generate coordiantes
coord = expand.grid(c(1:20),c(1:20))
colnames(coord) = c('x','y')
#get distance matrix
D = as.matrix(dist(coord,method = 'euclidean',diag = T))
#extract center distances
D = D[190,]
#make center circle red to distinguish
red = rep('black',length(D))
red[190] = 'red'
#make dataframe
coord = data.frame(coord,D,red)
ggplot(coord,aes(x,y,size=ifelse(D==0, NA, D),color = red))+geom_point()+
scale_color_manual(red, values = c("black", "red"))+ theme(legend.position="none")
library(ggplot2)
#generate coordiantes
coord = expand.grid(c(1:20),c(1:20))
colnames(coord) = c('x','y')
#get distance matrix
D = as.matrix(dist(coord,method = 'euclidean',diag = T))
#extract center distances
D = D[190,]
#make center circle red to distinguish
red = rep('black',length(D))
red[190] = 'red'
#make dataframe
coord = data.frame(coord,D,red)
ggplot(coord,aes(x,y,color = red))+geom_point()+
scale_color_manual(red, values = c("black", "red"))+ theme(legend.position="none")
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
devtools::document()
pkgdown::build_site_github_pages()
pkgdown::build_site()
pkgdown::build_site_github_pages()
devtools::document()
devtools::document()
library(nicheDE)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site()
devtools::document()
pkgdown::build_site_github_pages()
pkgdown::build_site_github_pages()
pkgdown::build_site()
remove.packages("nicheDE")
devtools::install_github('https://github.com/Kmason23/NicheDE')
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
print(Merged_NDE)
Merged_NDE
print.Niche_DE = function(object){
A = paste0('Niche-DE object with ',nrow(object@counts),' observations, ', ncol(object@counts),' genes, ',
length(unique(object@batch_ID)), ' batches, and ', length(object@cell_types), ' cell types.')
return(A)
}
print(Merged_NDE
)
devtools::document()
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
devtools::document()
Merged_NDE
?install_github
devtools::install_github(https://github.com/Kmason23/NicheDE,force = T)
devtools::install_github("https://github.com/Kmason23/NicheDE",force = T)
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
#library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
print(Merged_NDE)
#perform niche-DE
Merged_NDE = niche_DE(Merged_NDE,C = 150)
Merged_NDE
tum_fibro_minus = get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',pos = F,alpha = 0.05)
tum_fibro_minus = get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'positive',alpha = 0.05)
get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'posive',alpha = 0.05)
get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'positive',alpha = 0.05)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
devtools::document()
pkgdown::build_site_github_pages()
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
#library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
#perform niche-DE
Merged_NDE = niche_DE(Merged_NDE,C = 150)
tum_fibro_minus = get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'positive',alpha = 0.05)
View(tum_fibro_minus)
#get marker genes
fibro_tum_markers = niche_DE_markers(NDE_obj,index = 'stromal',niche1='tumor_epithelial',niche2='B_plasma',0.05)
#preview output
head(fibro_tum_markers)
#get marker genes
fibro_tum_markers = niche_DE_markers(Merged_NDE,index = 'stromal',niche1='tumor_epithelial',niche2='B_plasma',0.05)
Merged_NDE@cell_types
#get marker genes
fibro_tum_markers = niche_DE_markers(Merged_NDE,index = 'stromal',niche1='tumor_epithelial',niche2='myeloid',0.05)
View(fibro_tum_markers)
head(fibro_tum_markers)
View(fibro_tum_markers)
check = fibro_tum_markers[order(fibro_tum_markers[,2]),]
View(check)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
devtools::document()
pkgdown::build_site_github_pages()
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
#library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
#perform niche-DE
Merged_NDE = niche_DE(Merged_NDE,C = 150)
is.integer(Merged_NDE@counts)
Merged_NDE@counts[,1,]
Merged_NDE@counts[1,1]
Merged_NDE@counts[1,2]
Merged_NDE@counts[1,3]
Merged_NDE@counts[1,333]
Merged_NDE@counts[1,353]
1.5%%1
sum(Merged_NDE@counts%%1)
tum_fibro_minus = get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'positive',alpha = 0.05)
fibro_tum_markers = niche_DE_markers(Merged_NDE,index = 'stromal',niche1='tumor_epithelial',niche2='myeloid',0.05)
data("niche_net_ligand_target_matrix")
data("ramilowski_ligand_receptor_list")
fibro_tumor_LR = niche_LR_spot(NDE_obj,ligand_cell = 'tumor_epithelial',receptor_cell = 'stromal',
ligand_target_matrix = niche_net_ligand_target_matrix,
lr_mat = ramilowski_ligand_receptor_list,K = 25,M = 50,alpha = 0.05,truncation_value = 3)
fibro_tumor_LR = niche_LR_spot(Merged_NDE,ligand_cell = 'tumor_epithelial',receptor_cell = 'stromal',
ligand_target_matrix = niche_net_ligand_target_matrix,
lr_mat = ramilowski_ligand_receptor_list,K = 25,M = 50,alpha = 0.05,truncation_value = 3)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
devtools::document()
pkgdown::build_site_github_pages()
devtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
#library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
#perform niche-DE
Merged_NDE = niche_DE(Merged_NDE,C = 150)
tum_fibro_minus = get_niche_DE_genes(Merged_NDE,'interaction',index='tumor_epithelial',niche = 'stromal',direction = 'positive',alpha = 0.05)
View(tum_fibro_minus)
View(tum_fibro_minus)
fibro_tum_markers = niche_DE_markers(Merged_NDE,index = 'stromal',niche1='tumor_epithelial',niche2='myeloid',0.05)
data("niche_net_ligand_target_matrix")
data("ramilowski_ligand_receptor_list")
fibro_tumor_LR = niche_LR_spot(Merged_NDE,ligand_cell = 'tumor_epithelial',receptor_cell = 'stromal',
ligand_target_matrix = niche_net_ligand_target_matrix,
lr_mat = ramilowski_ligand_receptor_list,K = 25,M = 50,alpha = 0.05,truncation_value = 3)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\niche_DE_package\\nicheDE_github")
devtools::document()
pkgdown::build_site_github_pages()
evtools::install_github('https://github.com/Kmason23/NicheDE')
library(nicheDE)
library(RCTD)
library(Matrix)
library(Seurat)
library(ggplot2)
library(patchwork)
library(abind)
#library(enrichR)
library(varhandle)
filter = c(2,3,5)
setwd("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\new_reference")
#L = read.table(file = "Library_reference.txt", sep = " ")
L = readRDS('L_merge.rds')
colnames(L) = toupper(colnames(L))
L = as.matrix(L)
L = L[-filter,]
direcs = c("C:\\Users\\Kaishu\\Dropbox (Penn)\\Visium\\Crc_Visium_deeper_sequencing\\22261_visium")
NDE_obj = vector(mode = 'list',length = 5)
counter_rank = 1
tum_hep_ind = c(1,4)
for(sample in direcs){
sobj = Load10X_Spatial(sample, filename="filtered_feature_bc_matrix.h5")
#Make object
counts = sobj@assays$Spatial@counts
dim(counts)
counts = apply(counts,1,function(x){pmin(x,quantile(x,0.995))})
counts = floor(counts)
#counts = t(counts)
coord = sobj@images[["slice1"]]@coordinates[,4:5]
deconv_true = readRDS(paste0(sample,'\\deconv_merge.rds'))
deconv_true = as.matrix(deconv_true)
deconv_true[,tum_hep_ind[1]] = deconv_true[,tum_hep_ind[1]]*(deconv_true[,tum_hep_ind[1]]>0.25)
deconv_true[,tum_hep_ind[2]] = deconv_true[,tum_hep_ind[2]]*(deconv_true[,tum_hep_ind[2]]>0.25)
#remove rare CT
deconv_true = deconv_true[,-filter]
NDE_obj[[counter_rank]] = CreateNicheDEObject(counts,coord,L,deconv_true,sigma = c(1,400,1000))
counter_rank = counter_rank + 1
}
Merged_NDE = NDE_obj[[1]]
Merged_NDE = CalculateEffectiveNiche(Merged_NDE)
#perform niche-DE
Merged_NDE = niche_DE(Merged_NDE,C = 150)
