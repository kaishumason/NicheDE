[{"path":"https://kmason23.github.io/NicheDE/articles/Average_Expression_Profile_Calculation.html","id":"calculating-the-average-expression-profile-from-a-scrna-seq-reference-dataset","dir":"Articles","previous_headings":"","what":"Calculating the Average Expression Profile From a scRNA-seq Reference Dataset","title":"Average Expression Profile Calculation","text":"niche-DE compares observed gene expression average expression cell type, making average expression profile matrix critical.","code":""},{"path":"https://kmason23.github.io/NicheDE/articles/Average_Expression_Profile_Calculation.html","id":"from-raw-data","dir":"Articles","previous_headings":"","what":"From Raw Data","title":"Average Expression Profile Calculation","text":"raw data matrices, expression profile matrix can creaeted using function ‘CreateLibraryMatrix’. function takes 2 arguments cell type: Cell type assignment matrix. First column cell names second column cell type assignment.","code":"#read in data data('liver_met_data') data('liver_met_CT') #create library matrix CreateLibraryMatrix(liver_met_data,liver_met_CT)"},{"path":"https://kmason23.github.io/NicheDE/articles/Average_Expression_Profile_Calculation.html","id":"from-seurat-object","dir":"Articles","previous_headings":"","what":"From Seurat object","title":"Average Expression Profile Calculation","text":"reference dataset seurat object, can use function ‘CreateLibrarymatrixFromSeurat’. function takes 2 arguments assay: assay extract counts matrix calculate average expression profile Note cell types seurat object assumed available via command ‘Idents(seurat object)’","code":"#read in data data('liver_met_ref') #create library matrix CreateLibraryMatrixFromSeurat(liver_met_ref,assay = 'RNA')"},{"path":"https://kmason23.github.io/NicheDE/articles/Deconvolution.html","id":"deconvolution-using-rctd","dir":"Articles","previous_headings":"","what":"Deconvolution using RCTD","title":"Deconvolution","text":"show perform cell type deconvolution using RCTD (Robust Cell Type Decomposition). first step read reference dataset create reference object third step create RCTD object perform RCTD. set max number cell types spot 4. Please refer documentation information parameters fourth step reformat RCTD output matrix. matrix dimension #spots #cell types. row contain deconvolution estimate corresponding spot. information, visit spacexr github page.","code":"###Step 0: Packages library(spacexr) library(Matrix) library(Seurat)  ##download spacexr is not installed #library(devtools) #devtools::install_github(\"dmcable/spacexr\", build_vignettes = FALSE) ###STEP 1: Read in reference dataset #Read in reference data(\"liver_met_ref\") refr = liver_met_ref #get cell types of reference dataset cell_types = Idents(refr) #drop levels  cell_types = droplevels(cell_types) #get raw data matrix count_raw <- refr@assays$RNA@counts # make reference dataset reference <- Reference(count_raw, cell_types = cell_types) ###STEP 2: Read in spatial data #Read in seurat data. In practice, use seurat function to read in data data(\"liver_met_seurat_object\") seurat_object = liver_met_seurat_object #get counts matrix  counts = seurat_object@assays$Spatial@counts #save gene and cell names for later genes = colnames(counts) spots = rownames(counts) #reformat counts matrix to sparse matrix  counts = as(counts,'sparseMatrix') #name column and row names colnames(counts) = genes rownames(counts) = spots #get coordinate matrix coord = GetTissueCoordinates(seurat_object) #make spatial puck puck <- SpatialRNA(coord, counts) ###STEP 3: create an RCTD object #create an RCTD object. Here we set the max number of cell types in a spot to be 4. #see documentation for other parameter choices myRCTD <- create.RCTD(puck, reference, max_cores = 1, UMI_min = 0,MAX_MULTI_TYPES = 4) #Run RCTD myRCTD <- run.RCTD(myRCTD, doublet_mode = \"multi\") ###Step 4: Reformat results into a matrix  #get unique cell types CT = unique(cell_types) #initialize the deconvolution matrix  deconv_est = matrix(0,nrow(coord),length(CT)) #Column names will be cell types colnames(deconv_est) = CT #rownames will be spot names rownames(deconv_est) = rownames(coord) #iterate over deconvolution results  for(j in c(1:length(myRCTD@results))){   #match cell types found to index of unique cell type vector   fills = match(myRCTD@results[[j]]$cell_type_list,CT)   #fill in matrix    deconv_est[j,fills] = myRCTD@results[[j]]$sub_weights   #normalize so that rows sum to 1   deconv_est[j,] = deconv_est[j,]/sum(deconv_est[j,]) } #final output deconv_est"},{"path":"https://kmason23.github.io/NicheDE/articles/Deconvolution.html","id":"single-cell-data","dir":"Articles","previous_headings":"","what":"Single Cell Data","title":"Deconvolution","text":"data single cell resolution, deconvolution matrix dummy variable matrix. See link tutorial make dummy variable matrices. Note deconvolution matrix average expression profile matrix must cell types order.","code":""},{"path":"https://kmason23.github.io/NicheDE/articles/Effective_Niche_Calculation.html","id":"calculation-of-the-effective-niche","dir":"Articles","previous_headings":"","what":"Calculation of the Effective Niche","title":"Effective Niche Calculation","text":"Calculating effective niche given index cell consists three steps Calculating distance index cell every cell sample Transforming distances kernel similarities using gaussian kernel kernel bandwidth \\(\\sigma\\) Define effective niche niche cell \\(n\\) sum kernel similarities index cell cells type \\(n\\) can perform effective niche calculations using function ‘CalculateEffectiveNiche’ takes two arguments object: niche-DE object cutoff: minimum kernel similarity allowable. Similarities value truncated 0. Default value 0.05. Choosing reasonable sigma vector critical generating robust interpretable results.Sigma essentially determines range neighboring spots contribute towards effective niche. Small values sigma ensure close neighboring spots considered large values sigma result effective niches smooth across large regions tissue. see looks like, generate grid values show spots contribute effective niche middle spot. size spot corresponds relative importance. plot spatial coordinates grid middle spot colored red. first see happens kernel bandwidth small. see spot contributes effective niche middle spot . may appropriate spot can contain many cells like Visium data.  now see happens kernel bandwidth equivalent distance neighboring spots. see neighboring spots now also contribute effective niche. value may appropriate believe niche patterns depend closest neighbors spot.  now see happens kernel bandwidth large, say 1/4th length tissue. Many spots now contribute effective niche. Additionally,looks though nearly equal contribution many cells near center. value may appropriate believe niche patterns depend tissue level patterns niche. Clearly choice sigma can affect niche patterns find. spot data can contain many cells like Visium, recommend using sigma vector contains small value, value equal distance neighboring spots, value somewhat larger, say 2-3 times distance neighboring spots.","code":"NDE_obj = CalculateEffectiveNiche(NDE_obj) library(ggplot2) #generate coordiantes coord = expand.grid(c(1:20),c(1:20)) colnames(coord) = c('x','y') #get distance matrix D = as.matrix(dist(coord,method = 'euclidean',diag = T)) #extract center distances D = D[190,] #make center circle red to distinguish  red = rep('black',length(D)) red[190] = 'red' #make dataframe coord = data.frame(coord,D,red) ggplot(coord,aes(x,y,color = red))+geom_point()+   scale_color_manual(red, values = c(\"black\", \"red\"))+ theme(legend.position=\"none\") #input your own sigma value sigma = 0.001 #compute kernel similarities coord_sigma_small = coord coord_sigma_small$D = exp(-coord_sigma_small$D^2/sigma^2) #make small similarities 0 coord_sigma_small$D[coord_sigma_small$D<0.05] = 0 #plot similarities (size of dot = bigger similarity) ggplot(coord_sigma_small,aes(x,y,size=ifelse(D==0, NA, D),color = red))+geom_point()+   scale_color_manual(red, values = c(\"black\", \"red\"))+ theme(legend.position=\"none\") #> Warning: Removed 399 rows containing missing values (`geom_point()`). #input your own sigma value sigma = 1 #compute kernel similarities coord_sigma_small = coord coord_sigma_small$D = exp(-coord_sigma_small$D^2/sigma^2) #make small similarities 0 coord_sigma_small$D[coord_sigma_small$D<0.05] = 0 #plot similarities (size of dot = bigger similarity) ggplot(coord_sigma_small,aes(x,y,size=ifelse(D==0, NA, D),color = red))+geom_point()+   scale_color_manual(red, values = c(\"black\", \"red\"))+ theme(legend.position=\"none\") #> Warning: Removed 391 rows containing missing values (`geom_point()`). #input your own sigma value sigma = 10 #compute kernel similarities coord_sigma_small = coord coord_sigma_small$D = exp(-coord_sigma_small$D^2/sigma^2) #make small similarities 0 coord_sigma_small$D[coord_sigma_small$D<0.05] = 0 #plot similarities (size of dot = bigger similarity) ggplot(coord_sigma_small,aes(x,y,size=ifelse(D==0, NA, D),color = red))+geom_point()+   scale_color_manual(red, values = c(\"black\", \"red\"))+ theme(legend.position=\"none\")"},{"path":"https://kmason23.github.io/NicheDE/articles/Getting_Niche_DE_Genes.html","id":"extract-niche-de-genes-for-a-specific-indexniche-pair","dir":"Articles","previous_headings":"","what":"Extract Niche-DE Genes For a Specific (Index,Niche) Pair","title":"Getting Niche-DE Genes","text":"calculating pvalues, can find genes \\((index,niche)\\) niche genes varying resolutions FDR control levels. function called ‘get_niche_DE_genes’ contains 6 arguments object: niche-DE object test.level: resolution return genes. three choices test.level;gene level, cell type level, interaction level. index: index cell type interest niche: niche cell type interest direction: Character indicating whether return genes (index,niche)+ patterns (direction = ‘positive’) (index,niche)- (direction = ‘negative’). Default value ‘positive’. alpha: level perform benjamini-hochberg procedure resolution level. Default value 0.05. , find interaction level (fibroblast,tumor)+ niche genes. output list genes corresponding pvalues resolution specified. Assume direction parameter set ‘positive’. interpretation output differ based resolution chosen. Test.level = gene: Genes outputted show sign niche gene \\((index,niche)\\) pair. Test.level = cell type: Genes outputted significantly niche regulated index cell. niche cell type unknown. Test.level = interaction: Genes outputted significantly upregulated index cell type presence niche cell type. ‘pos’ = ‘False’ Genes outputted significantly downregulated index cell type presence niche cell type. Interaction level \\((index,niche)+\\) \\((index,niche)-\\) genes can input pathway enrichment analysis determine processes downregulated index cell type presence niche cell type. perform pathway enrichment analysis (fibroblast,tumor)+ genes using enrichR package.","code":"get_niche_DE_genes(NDE_obj,'interaction',index='stromal',niche = 'tumor_epithelial',direction = 'positive',alpha = 0.05) #Load enichr package library(enrichR) #get fibroblast tumor niche genes fibro_tum_pos = get_niche_DE_genes(NDE_obj,'interaction',index='stromal',niche = 'tumor_epithelial',pos = T,alpha = 0.05) #run pathway enrichment analysis fibro_tum_processes = enrichr(fibro_tum_pos[,1],databases = 'Reactome_2016') #View processes in a table head(fibro_tum_processes$Reactome_2016)"},{"path":"https://kmason23.github.io/NicheDE/articles/Installation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installation","text":"can install NicheDE follwoing code","code":"Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=\"true\") install.packages(\"devtools\") options(timeout=9999999) devtools::install_github(\"Kmason23/NicheDE\") # install library(NicheDE)"},{"path":"https://kmason23.github.io/NicheDE/articles/Marker_Genes.html","id":"finding-marker-genes-in-an-index-cell-type-between-two-niche-cell-types","dir":"Articles","previous_headings":"","what":"Finding Marker Genes in an Index Cell Type Between Two Niche Cell Types","title":"Marker Genes","text":"Given two niche cell types, \\(n_1\\) \\(n_2\\), index cell type \\(\\) purpose niche marker gene analysis find genes effect \\(n_1\\) \\(\\)’s gene expression greater effect \\(n_2\\) \\(\\)’s gene expression. done contrast test corresponding niche-DE regression coefficents. Marker gene analysis can done via function ‘niche_DE_markers’ takes 5 arguments object: niche-DE object index: index cell type niche1: Niche cell type \\(n_1\\) niche2: Niche cell type \\(n_2\\) alpha: FDR control level desired look marker genes fibroblasts near tumor cells relative B cells. output list marker genes corresponding adjusted pvalues.","code":"#get marker genes fibro_tum_markers = niche_DE_markers(NDE_obj,index = 'stromal',niche1='tumor_epithelial',niche2='B_plasma',0.05) #preview output head(fibro_tum_markers)"},{"path":"https://kmason23.github.io/NicheDE/articles/Performing_Niche_DE.html","id":"running-niche-de","dir":"Articles","previous_headings":"","what":"Running Niche-DE","title":"Performing_Niche_DE","text":"set niche-DE object, can run niche-DE using function ‘niche_DE’. function takes 5 arguments object: niche-DE object C: minimum total expression gene across observations needed niche-DE model run. default value 150. M: Minimum number spots containing index cell type niche cell type effective niche (index,niche) niche patterns investigated. default value 10 Gamma: Percentile gene needs respect expression index cell type order model investigate niche patterns gene index cell. default value 0.8 (80th percentile) running niche-DE, ‘niche-DE’ slot niche-DE object populated. list length equal length sigma. item list contains sublist 4 items. T-stat: array dimension #cell types #cell types #genes. Index (,j,k) represents T_statistic corresponding hypothesis test testing whether gene k (index cell type , niche cell type j) niche gene. Beta: array dimension #cell types #cell types #genes. Index (,j,k) represents beta coefficient corresponding niche effect niche cell type j index cell type gene k. var-cov: array dimension (#cell types) squared (#cell types) squared #genes. matrix corresponding indices (:,:,k) gives variance covariance matrix beta coefficients niche-DE model gene k. log-lik: vector length #genes. Index k gives log-likelihood niche-DE model gene k. Note item niche-DE list named based element sigma T-stat,beta,var-cov,log-lik items list based effective niche calculated using kernel bandwidth equal element sigma. Additionally, following two slots niche-DE object populated gene-level: list gene level pvalues. vector length equal number genes. cell-type-level: matrix dimension #genes #cell types gives cell type level pvalues.Index (,j) gives pvalue corresponding whether gene niche gene index cell type j. interaction-level: array dimension #cell types #cell types #genes gives interaction level pvalues. Index (,j,k) gives pvalue corresponding whether gene k (index cell type , niche cell type j)+ niche gene. gene-level: list gene level pvalues. vector length equal number genes. cell-type-level: matrix dimension #genes #cell types gives cell type level pvalues.Index (,j) gives pvalue corresponding whether gene niche gene index cell type j. interaction-level: array dimension #cell types #cell types #genes gives interaction level pvalues. Index (,j,k) gives pvalue corresponding whether gene k (index cell type , niche cell type j)- niche gene.","code":"NDE_obj = niche_DE(NDE_obj)"},{"path":"https://kmason23.github.io/NicheDE/articles/Tutorial.html","id":"niche-de-tutorial","dir":"Articles","previous_headings":"","what":"Niche-DE Tutorial","title":"Tutorial","text":"page contains tutorials using nicheDE package R. step niche-DE process described detail; initial deconvolution step downstream processes niche ligand-receptor analysis. Click links visit specific step pipeline.","code":""},{"path":"https://kmason23.github.io/NicheDE/articles/Tutorial.html","id":"installing-niche-de-and-required-data-analysis-before-performing-niche-de","dir":"Articles","previous_headings":"Niche-DE Tutorial","what":"Installing Niche-DE and Required Data Analysis Before Performing Niche-DE","title":"Tutorial","text":"Installation: download Niche-DE using devtools. Deconvolution: step step guide performing cell type deconvolution spatial transcriptomic data using RCTD. Average Expression Profile: guide calculate average expression profile matrix reference dataset. Object Creation: guide create niche-DE object starting spatial seurat object raw data matrices.","code":""},{"path":"https://kmason23.github.io/NicheDE/articles/Tutorial.html","id":"creating-an-object-and-performing-niche-de","dir":"Articles","previous_headings":"Niche-DE Tutorial","what":"Creating an Object and Performing Niche-DE","title":"Tutorial","text":"Effective Niche Calculation: guide calculate effective niche well suggested guidelines choose kernel bandwidth. Performing Niche-DE: guide run niche-DE niche-DE object.","code":""},{"path":"https://kmason23.github.io/NicheDE/articles/Tutorial.html","id":"post-analysis","dir":"Articles","previous_headings":"Niche-DE Tutorial","what":"Post Analysis","title":"Tutorial","text":"Getting Niche-DE Genes: guide get niche-DE genes given index niche cell type well perform pathway enrichment analysis given niche-DE genes. Marker Genes: guide performing marker gene analysis using niche-DE Ligand Receptor Analysis: guide performing ligand-receptor analysis using niche-DE.","code":""},{"path":"https://kmason23.github.io/NicheDE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kaishu Mason. Author, maintainer.","code":""},{"path":"https://kmason23.github.io/NicheDE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mason K (2023). nicheDE: Niche-DE. R package version 0.0.0.9000, https://kmason23.github.io/NicheDE/.","code":"@Manual{,   title = {nicheDE: Niche-DE},   author = {Kaishu Mason},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://kmason23.github.io/NicheDE/}, }"},{"path":"https://kmason23.github.io/NicheDE/index.html","id":"nichede","dir":"","previous_headings":"","what":"Niche-DE","title":"Niche-DE","text":"NicheDE method detects context dependent changes gene expression spatial transcriptomic data. particular, given index niche cell type, define (index,niche) niche gene gene gene -regulated index cell type presence niche cell type. NicheDE identifies (index,niche)+ genes first characterizing cell’s neighborhood vector called effective niche. , regressing gene expression effective niche,testing certain coefficients equal 0 equivalent determining gene (index,niche) niche gene. information method please check manuscript","code":""},{"path":"https://kmason23.github.io/NicheDE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Niche-DE","text":"can install NicheDE following code","code":"#make sure that you have the Matrix and abind packages  library(Matrix) library(abind) Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=\"true\") install.packages(\"devtools\") options(timeout=9999999) devtools::install_github(\"Kmason23/NicheDE\") # install library(nicheDE)"},{"path":"https://kmason23.github.io/NicheDE/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Niche-DE","text":"Click link tutorial using nicheDENicheDE Tutorial: Steps","code":""},{"path":"https://kmason23.github.io/NicheDE/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Niche-DE","text":"Kaishu Mason, Anuja Sathe, Paul Hess, Jiazhen Rong, Chi-Yun Wu, Emma Furth, Hanlee P. Ji, Nancy Zhang Niche differential gene expression analysis spatial transcriptomics data identifies context-dependent cell-cell interactions (Biorxiv 2023: https://doi.org/10.1101/2023.01.03.522646)","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CalculateEffectiveNiche.html","id":null,"dir":"Reference","previous_headings":"","what":"CalculateEffectiveNiche — CalculateEffectiveNiche","title":"CalculateEffectiveNiche — CalculateEffectiveNiche","text":"function calculates effective niche niche-DE object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CalculateEffectiveNiche.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CalculateEffectiveNiche — CalculateEffectiveNiche","text":"","code":"CalculateEffectiveNiche(object, cutoff = 0.05)"},{"path":"https://kmason23.github.io/NicheDE/reference/CalculateEffectiveNiche.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CalculateEffectiveNiche — CalculateEffectiveNiche","text":"object niche-DE object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CalculateEffectiveNiche.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CalculateEffectiveNiche — CalculateEffectiveNiche","text":"niche-DE object effective niche calculated. effective niche list entry corresponding kernel bandwidth","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"CreateLibraryMatrix — CreateLibraryMatrix","title":"CreateLibraryMatrix — CreateLibraryMatrix","text":"function creates expression profile matrix single cell data","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CreateLibraryMatrix — CreateLibraryMatrix","text":"","code":"CreateLibraryMatrix(data, cell_type)"},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CreateLibraryMatrix — CreateLibraryMatrix","text":"data Single cell rna-seq counts matrix. Dimension cells/spots genes cell_type Cell_type assignment matrix. First row cell names second row cell type assignment.","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CreateLibraryMatrix — CreateLibraryMatrix","text":"library matrix average expression profile per cell type","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrixFromSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"CreateLibraryMatrixFromSeurat — CreateLibraryMatrixFromSeurat","title":"CreateLibraryMatrixFromSeurat — CreateLibraryMatrixFromSeurat","text":"function creates expression profile matrix single cell data Seurat object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrixFromSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CreateLibraryMatrixFromSeurat — CreateLibraryMatrixFromSeurat","text":"","code":"CreateLibraryMatrixFromSeurat(seurat_object, assay)"},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrixFromSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CreateLibraryMatrixFromSeurat — CreateLibraryMatrixFromSeurat","text":"seurat_object seurat object assay assay want extract counts matrix calculate average expression profile.","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateLibraryMatrixFromSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CreateLibraryMatrixFromSeurat — CreateLibraryMatrixFromSeurat","text":"library matrix average expression profile per cell type","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObject.html","id":null,"dir":"Reference","previous_headings":"","what":"CreateNicheDEObject — CreateNicheDEObject","title":"CreateNicheDEObject — CreateNicheDEObject","text":"function creates niche-DE object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CreateNicheDEObject — CreateNicheDEObject","text":"","code":"CreateNicheDEObject(counts_mat, coordinate_mat, library_mat, deconv_mat, sigma)"},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CreateNicheDEObject — CreateNicheDEObject","text":"counts_mat Counts matrix. Dimension cells/spots genes coordinate_mat Coordinate matrix library_mat Matrix indicating average expression profile cell type sample deconv_mat Deconvolution cell type assignment matrix data sigma List kernel bandwidths use calculating effective niche","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CreateNicheDEObject — CreateNicheDEObject","text":"niche-DE object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObjectFromSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"CreateNicheDEObjectFromSeurat — CreateNicheDEObjectFromSeurat","title":"CreateNicheDEObjectFromSeurat — CreateNicheDEObjectFromSeurat","text":"function creates niche-DE object seurat object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObjectFromSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CreateNicheDEObjectFromSeurat — CreateNicheDEObjectFromSeurat","text":"","code":"CreateNicheDEObjectFromSeurat(   seurat_object,   assay,   library_mat,   deconv_mat,   sigma )"},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObjectFromSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CreateNicheDEObjectFromSeurat — CreateNicheDEObjectFromSeurat","text":"seurat_object spatial seurat object.Coordinate matrix extracted via seurat function 'GetTissueCoordinates' assay assay extract counts matrix . counts matrix extracted counts slot. library_mat Matrix indicating average expression profile cell type sample deconv_mat Deconvolution cell type assignment matrix data sigma List kernel bandwidths use calculating effective niche","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/CreateNicheDEObjectFromSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CreateNicheDEObjectFromSeurat — CreateNicheDEObjectFromSeurat","text":"niche-DE object","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/Filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter — Filter","title":"Filter — Filter","text":"function filters niche-DE object include specific observations","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/Filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — Filter","text":"","code":"Filter(object, cell_names)"},{"path":"https://kmason23.github.io/NicheDE/reference/Filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter — Filter","text":"object niche-DE object cell_names Cell names observations kept","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/Filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter — Filter","text":"niche-DE object includes specified cells. recommend using function calculating effective niche whole dataset","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/MergeObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"MergeObjects — MergeObjects","title":"MergeObjects — MergeObjects","text":"function merges niche-DE objects","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/MergeObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MergeObjects — MergeObjects","text":"","code":"MergeObjects(objects)"},{"path":"https://kmason23.github.io/NicheDE/reference/MergeObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MergeObjects — MergeObjects","text":"objects list niche-DE objects","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/MergeObjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MergeObjects — MergeObjects","text":"niche-DE object niche-DE object concatenates niche-DE object used input list. Coordinates scaled ensure kernel bandwidths consistent across datasets","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/get_niche_DE_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get niche genes for the given index and niche cell types at the desired test.level — get_niche_DE_genes","title":"Get niche genes for the given index and niche cell types at the desired test.level — get_niche_DE_genes","text":"function returns genes show niche patterns desired test.level","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/get_niche_DE_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get niche genes for the given index and niche cell types at the desired test.level — get_niche_DE_genes","text":"","code":"get_niche_DE_genes(   object,   test.level,   index,   niche,   direction = \"positive\",   alpha = 0.05 )"},{"path":"https://kmason23.github.io/NicheDE/reference/get_niche_DE_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get niche genes for the given index and niche cell types at the desired test.level — get_niche_DE_genes","text":"object niche-DE object test.level test.level return genes (gene level, cell type level, interaction level) index index cell type niche niche cell type direction Character indicating whether return genes (index,niche)+ patterns (direction = 'positive') (index,niche)- (direction = 'negative'). Default value 'positive'. alpha level perform Benjamini Hochberg correction. Default value = 0.05","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/get_niche_DE_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get niche genes for the given index and niche cell types at the desired test.level — get_niche_DE_genes","text":"vector genes niche significant desired FDR, test.level, index cell type, niche cell type","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE.html","id":null,"dir":"Reference","previous_headings":"","what":"Niche_DE — niche_DE","title":"Niche_DE — niche_DE","text":"function performs niche-DE","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Niche_DE — niche_DE","text":"","code":"niche_DE(object, C = 150, M = 10, gamma = 0.8, print = T)"},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Niche_DE — niche_DE","text":"object niche-DE object C Minimum total expression gene needed model run. Default value 150. M Minimum number spots containing index cell type niche cell type effective niche (index,niche) niche patterns investigated. Default value 10. gamma Percentile gene needs respect expression index cell type order model investigate niche patterns gene index cell. Default value 0.8 (80th percentile) print Logical function print progress report (kernel, gene #)","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Niche_DE — niche_DE","text":"niche-DE object niche-DE analysis performed","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Niche-DE marker genes — niche_DE_markers","title":"Get Niche-DE marker genes — niche_DE_markers","text":"function returns genes marker genes index cell type near first niche cell type realtive second one","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Niche-DE marker genes — niche_DE_markers","text":"","code":"niche_DE_markers(object, index, niche1, niche2, alpha = 0.05)"},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Niche-DE marker genes — niche_DE_markers","text":"object niche-DE object index index cell type want find marker genes niche1 niche cell type marker genes found niche2 niche wish compare (index,niche1) patterns alpha level perform Benjamini Hochberg correction. Default value 0.05. pos Logical indicating whether return genes (index,niche)+ patterns (pos = T) (index,niche)- (pos = F)","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_DE_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Niche-DE marker genes — niche_DE_markers","text":"vector genes niche marker genes index cell type near niche1 cell type relative niche2 cell type","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Niche-LR (Ligand receptor analysis) on single cell level data — niche_LR_cell","title":"Perform Niche-LR (Ligand receptor analysis) on single cell level data — niche_LR_cell","text":"function returns ligands receptors inferred expressed given cell types","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Niche-LR (Ligand receptor analysis) on single cell level data — niche_LR_cell","text":"","code":"niche_LR_cell(   object,   ligand_cell,   receptor_cell,   ligand_target_matrix,   lr_mat,   K = 25,   M = 50,   alpha = 0.05,   alpha_2 = 0.5,   truncation_value = 3 )"},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Niche-LR (Ligand receptor analysis) on single cell level data — niche_LR_cell","text":"object niche-DE object ligand_cell cell type expresses ligand receptor_cell cell type expresses receptor ligand_target_matrix matrix measures assocaition ligands downstream target genes. target genes ligands lr_mat matrix matches ligands corresponding receptors. matrix two columns. first ligands second corresponding receptors K number downstream target genes use calculating ligand potential score. Default value 25. M maximum number ligands can pass initial filtering. Default value 50. alpha level perform Benjamini Hochberg correction. Default value 0.05. alpha_2 null quantile compare observed expression . Default value 0.5 (50th percentile). truncation_value value truncate T statistics. Default value 3.","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Niche-LR (Ligand receptor analysis) on single cell level data — niche_LR_cell","text":"list ligand-receptor pairs found expressed specified cell type","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Niche-LR (Ligand receptor analysis) on spot level data — niche_LR_spot","title":"Perform Niche-LR (Ligand receptor analysis) on spot level data — niche_LR_spot","text":"function returns ligands receptors inferred expressed given cell types","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Niche-LR (Ligand receptor analysis) on spot level data — niche_LR_spot","text":"","code":"niche_LR_spot(   object,   ligand_cell,   receptor_cell,   ligand_target_matrix,   lr_mat,   K = 25,   M = 50,   alpha = 0.05,   truncation_value = 3 )"},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Niche-LR (Ligand receptor analysis) on spot level data — niche_LR_spot","text":"object niche-DE object ligand_cell cell type expresses ligand receptor_cell cell type expresses receptor ligand_target_matrix matrix measures association ligands downstream target genes. target genes ligands lr_mat matrix matches ligands corresponding receptors. matrix two columns. first ligands second corresponding receptors K number downstream target genes use calculating ligand potential score. Default value 25. M maximum number ligands can pass initial filtering. Default value 50. alpha level perform Benjamini Hochberg correction. Default value 0.05. truncation_value value truncate T statistics. Default value 3.","code":""},{"path":"https://kmason23.github.io/NicheDE/reference/niche_LR_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Niche-LR (Ligand receptor analysis) on spot level data — niche_LR_spot","text":"list ligand-receptor pairs found expressed specified cell type","code":""}]
